import asyncio
import logging
import sys
import os
from typing import Optional
from datetime import datetime
from heygen.session_manager import HeyGenSessionManager
from heygen.config import Config
from pipecat_integration.heygen_processor import HeyGenFrameProcessor

logger = logging.getLogger(__name__)

class ConsoleAvatarChat:
    """–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –∞–≤–∞—Ç–∞—Ä–æ–º"""
    
    def __init__(self):
        self.session_manager = HeyGenSessionManager()
        self.frame_processor = HeyGenFrameProcessor(self.session_manager)
        self.current_session_id = None
        self.keep_alive_task = None
        self.is_running = False
        self.session_active = False
    
    def print_welcome(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
        print("\n" + "="*60)
        print("ü§ñ HeyGen Interactive Avatar Console Chat")
        print("="*60)
        print("  /help     - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å")
        print("  /avatars  - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤")
        print("  /quit     - –≤—ã–π—Ç–∏")
        print("\nüí° –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è...")
    
    def print_help(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        print("\nüìã –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:")
        print("  /help     - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        print("  /start    - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –∞–≤–∞—Ç–∞—Ä–æ–º")
        print("  /cleanup  - –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏")
        print("  /status   - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API –∏ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏")
        print("  /stop     - –∑–∞–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é")
        print("  /quit     - –≤—ã–π—Ç–∏")
        print("\nüí¨ –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä—É –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç")
    
    async def cleanup_sessions(self):
        """–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏"""
        print("\nüßπ –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
            active_sessions = await self.session_manager.list_active_sessions()
            
            if not active_sessions:
                print("‚úÖ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π")
                return
            
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {len(active_sessions)}")
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
            success = await self.session_manager.close_all_active_sessions()
            
            if success:
                print("‚úÖ –í—Å–µ —Å–µ—Å—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã")
            else:
                print("‚ö†Ô∏è –ù–µ –≤—Å–µ —Å–µ—Å—Å–∏–∏ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–π: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–π: {e}")

    async def start_session(self):
        """–°–æ–∑–¥–∞—Ç—å –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã"""
        if self.session_active:
            print("‚ö†Ô∏è –°–µ—Å—Å–∏—è —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stop –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏.")
            return False
            
        print("\nÔøΩ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π —Å–µ—Å—Å–∏–∏...")
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –ª—é–±—ã–µ –∑–∞–≤–∏—Å—à–∏–µ —Å–µ—Å—Å–∏–∏
            await self.session_manager.close_all_active_sessions()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            if await self.session_manager.create_session():
                print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {self.session_manager.session_id}")
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é
                print("üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏...")
                if await self.session_manager.start_session():
                    self.session_active = True
                    self.current_session_id = self.session_manager.session_id
                    print("‚úÖ –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
                    print(f"‚è±Ô∏è  –õ–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏: {self.session_manager.session_duration_limit}s")
                    print("\nüéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä—É!")
                    return True
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é")
                    await self.session_manager.close_session()
                    self.session_active = False
                    return False
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é")
                self.session_active = False
                return False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False

    async def stop_session(self):
        """–ó–∞–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é —Å–µ—Å—Å–∏—é"""
        if not self.session_active:
            print("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏")
            return
            
        print("\nüîí –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏...")
        
        try:
            if self.session_manager.is_active:
                success = await self.session_manager.close_session()
                if success:
                    print("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞")
                else:
                    print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–∏")
            
            self.session_active = False
            self.current_session_id = None
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ—Å—Å–∏–∏: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def send_message_to_avatar(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä—É –∏ —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –æ—Ç–≤–µ—Ç"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
        if not hasattr(self.session_manager, 'session_id') or not self.session_manager.session_id:
            print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏.")
            self.session_active = False
            return
            
        print(f"\nüó£Ô∏è  –û—Ç–ø—Ä–∞–≤–∫–∞: \"{message}\"")
        print("‚è≥ –ê–≤–∞—Ç–∞—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º frame processor –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á–∏ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
            video_path = await self.frame_processor.process_text_task(message)
            
            if video_path:
                print(f"‚úÖ –í–∏–¥–µ–æ –æ—Ç–≤–µ—Ç —Å–∫–∞—á–∞–Ω: {video_path}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                import os
                if os.path.exists(video_path):
                    file_size = os.path.getsize(video_path)
                    size_mb = file_size / (1024 * 1024)
                    print(f"üìπ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.2f} MB")
                    print(f"üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {video_path}")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ –æ—Ç–≤–µ—Ç")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def check_session_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏"""
        print("\nüìä –°—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏:")
        print("-" * 30)
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º
        real_active = hasattr(self.session_manager, 'session_id') and self.session_manager.session_id
        
        if real_active:
            self.session_active = True
            self.current_session_id = self.session_manager.session_id
            print(f"üü¢ –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è: {self.current_session_id}")
            # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –º–µ—Ç–æ–¥ get_remaining_time –ø–æ–∫–∞ –æ–Ω –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω
            # remaining = self.session_manager.get_remaining_time()
            # if remaining:
            #     print(f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {remaining}s")
            print("üí¨ –ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
        else:
            self.session_active = False
            print("üî¥ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏")
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏")

    async def check_api_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏"""
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API...")
        
        try:
            active_sessions = await self.session_manager.list_active_sessions()
            
            if not active_sessions:
                print("‚úÖ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π - API –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {len(active_sessions)}")
                for session in active_sessions:
                    session_id = session.get('session_id', 'Unknown')
                    status = session.get('status', 'Unknown')
                    print(f"  - {session_id}: {status}")
                    
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def process_command(self, command: str) -> bool:
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç False –¥–ª—è –≤—ã—Ö–æ–¥–∞"""
        if command == '/help':
            self.print_help()
        elif command == '/start':
            await self.start_session()
        elif command == '/stop':
            await self.stop_session()
        elif command == '/cleanup':
            await self.cleanup_sessions()
        elif command == '/status':
            await self.check_session_status()
            await self.check_api_status()
        elif command == '/quit':
            print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
            return False
        else:
            print(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            print("   –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
        
        return True

    async def chat_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —á–∞—Ç–∞"""
        try:
            while True:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏
                if self.session_active:
                    prompt = "\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä—É (–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É): "
                else:
                    prompt = "\nüí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: "
                    
                user_input = input(prompt).strip()
                
                if not user_input:
                    continue
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
                if user_input.startswith('/'):
                    should_continue = await self.process_command(user_input)
                    if not should_continue:
                        break
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä—É –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞
                    if self.session_active:
                        await self.send_message_to_avatar(user_input)
                    else:
                        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.")
                    
        except KeyboardInterrupt:
            print("\n\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (Ctrl+C)")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —á–∞—Ç–∞: {e}")
            print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤"""
        print("\nüßπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        
        self.is_running = False
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        if self.session_active:
            await self.stop_session()
        
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

    async def run(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å —á–∞—Ç"""
        try:
            self.print_welcome()
            
            print("\nüéâ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            print("    –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
            print("    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –∞–≤–∞—Ç–∞—Ä–æ–º")
            print("    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cleanup –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–∏–º–∏—Ç–∞–º–∏")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª —á–∞—Ç–∞
            await self.chat_loop()
            
        finally:
            # –í—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
            await self.cleanup()

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    chat = ConsoleAvatarChat()
    await chat.run()

if __name__ == "__main__":
    asyncio.run(main())
