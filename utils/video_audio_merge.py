#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π FFmpeg
"""

import subprocess
import os
import logging

logger = logging.getLogger(__name__)

def merge_video_audio_with_ffmpeg(video_path: str, audio_path: str, output_path: str) -> bool:
    """
    –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ FFmpeg
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
        if not os.path.exists(video_path):
            logger.error(f"–í–∏–¥–µ–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {video_path}")
            return False
            
        if not os.path.exists(audio_path):
            logger.error(f"–ê—É–¥–∏–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_path}")
            return False
        
        # –ö–æ–º–∞–Ω–¥–∞ FFmpeg –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ
        cmd = [
            'ffmpeg',
            '-i', video_path,  # –í—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ
            '-i', audio_path,  # –í—Ö–æ–¥–Ω–æ–µ –∞—É–¥–∏–æ
            '-c:v', 'copy',    # –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –±–µ–∑ –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
            '-c:a', 'aac',     # –ö–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∞—É–¥–∏–æ –≤ AAC
            '-shortest',       # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Ç–æ–∫
            '-y',              # –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            output_path
        ]
        
        logger.info(f"–í—ã–ø–æ–ª–Ω—è–µ–º: {' '.join(cmd)}")
        
        # –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            timeout=30  # –¢–∞–π–º–∞—É—Ç 30 —Å–µ–∫—É–Ω–¥
        )
        
        if result.returncode == 0:
            logger.info(f"‚úÖ –í–∏–¥–µ–æ —Å –∞—É–¥–∏–æ —Å–æ–∑–¥–∞–Ω–æ: {output_path}")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ FFmpeg: {result.stderr}")
            return False
            
    except subprocess.TimeoutExpired:
        logger.error("‚ùå –¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è FFmpeg")
        return False
    except FileNotFoundError:
        logger.error("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
        logger.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg: brew install ffmpeg")
        return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def check_ffmpeg_available() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å FFmpeg –≤ —Å–∏—Å—Ç–µ–º–µ"""
    try:
        result = subprocess.run(['ffmpeg', '-version'], capture_output=True, timeout=5)
        return result.returncode == 0
    except:
        return False
